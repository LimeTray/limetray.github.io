import{j as D}from"./jsx-runtime-8406ef1e.js";import{d as g,l as J}from"./styled-components.browser.esm-d2d81691.js";import{H as K}from"./Header-933a70f4.js";import"./index-ad58220e.js";import"./_commonjsHelpers-de833af9.js";import"./extends-4c19d496.js";import"./getElementType-486fb75c.js";import"./childrenUtils-8c0966fa.js";import"./Icon-a36dbc07.js";import"./inheritsLoose-5494d9cc.js";import"./factories-03e2068e.js";import"./Label-ce9f83fa.js";import"./ModernAutoControlledComponent-4ca57a24.js";import"./assertThisInitialized-081f9914.js";import"./htmlPropsUtils-cd6198e4.js";import"./includes-6af2fe54.js";import"./Portal-3e499843.js";import"./index-4fee7e45.js";import"./Ref-51c42093.js";import"./objectWithoutPropertiesLoose-f3b3ace0.js";const Q={colors:{primary:"#00CD7C",secondary:"#1b1c1d",success:"#21ba45",error:"#db2828",warning:"#f2c037",info:"#31ccec",backgroundSecondary:"#f6f7fb",background:"#f2c037",text:"#333333",border:"#d4d4d5",muted:"#767676"},spacing:{xxs:"4px",xs:"8px",sm:"12px",md:"16px",lg:"24px",xl:"32px",xxl:"48px"},sizes:{mini:"4px",tiny:"8px",small:"12px",medium:"16px",large:"24px",big:"32px",huge:"48px",massive:"64px"},typography:{heading:{fontFamily:"'CustomFont1', 'Roboto', sans-serif",fontWeight:"700",fontSize:"2rem",lineHeight:"1.2"},body:{fontFamily:"'CustomFont2', 'Open Sans', sans-serif",fontWeight:"400",fontSize:"1rem",lineHeight:"1.5"},caption:{fontFamily:"'CustomFont2', 'Open Sans', sans-serif",fontWeight:"300",fontSize:"0.875rem",lineHeight:"1.4"},button:{fontFamily:"'CustomFont1', 'Roboto', sans-serif",fontWeight:"500",fontSize:"1rem",lineHeight:"1.25"}},borderRadius:{small:"4px",medium:"6px",large:"8px",xlarge:"10px"},shadows:{small:"0 1px 2px rgba(0, 0, 0, 0.1)",medium:"0 2px 4px rgba(0, 0, 0, 0.1)",large:"0 4px 8px rgba(0, 0, 0, 0.1)",xlarge:"0 8px 16px rgba(0, 0, 0, 0.1)"},breakpoints:{xs:"0px",sm:"600px",md:"768px",lg:"1024px",xl:"1200px"},margins:{none:"0px",small:"8px",medium:"16px",large:"24px",xlarge:"32px"},padding:{none:"0px",small:"8px",medium:"16px",large:"24px",xlarge:"32px"}},U=()=>Q,V=U(),X=()=>V,Y={getStyle:X},Z=g(K)`
  color: ${e=>e.$color};
`,y=(e,o,d,c)=>J`
  font-family: ${e.fontFamily};
  font-weight: ${e.fontWeight};
  font-size: ${o};
  line-height: ${e.lineHeight};
  color: ${d};
  text-align: ${c||"left"};
`,ee=g.div`
  ${e=>y(e.$typographyType,e.$resolvedSize,e.$color,e.$textAlign)}
`,re=g.div`
  ${e=>y(e.$typographyType,e.$resolvedSize,e.$color,e.$textAlign)}
`,te=g.span`
  ${e=>y(e.$typographyType,e.$resolvedSize,e.$color,e.$textAlign)}
`,oe=g.div`
  ${e=>y(e.$typographyType,e.$resolvedSize,e.$color,e.$textAlign)}
`,O=e=>{const o=Y.getStyle(),d=o.typography[e.type],c=e.size?o.sizes[e.size]:d.fontSize,E=e.color||o.colors.text,I=e.textAlign||"left",L=(G=>{switch(G){case"heading":return Z;case"body":return ee;case"caption":return re;case"button":return te;default:return oe}})(e.type),{type:se,size:ie,color:ne,text:M,textAlign:pe,typographyType:le,subheader:ge,...N}=e;return D.jsx(L,{$typographyType:d,$resolvedSize:c,$color:E,$textAlign:I,...N,children:M})},R=O;O.__docgenInfo={description:"",methods:[],displayName:"Typography",props:{text:{required:!0,tsType:{name:"string"},description:""},color:{required:!1,tsType:{name:"string"},description:""},type:{required:!0,tsType:{name:"signature",type:"object",raw:`{
  heading: Typography;
  body: Typography;
  caption: Typography;
  button: Typography;
}`,signature:{properties:[{key:"heading",value:{name:"Typography",required:!0}},{key:"body",value:{name:"Typography",required:!0}},{key:"caption",value:{name:"Typography",required:!0}},{key:"button",value:{name:"Typography",required:!0}}]}},description:""},id:{required:!0,tsType:{name:"string"},description:""},size:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  mini: string;
  tiny: string;
  small: string;
  medium: string;
  large: string;
  big: string;
  huge: string;
  massive: string;
}`,signature:{properties:[{key:"mini",value:{name:"string",required:!0}},{key:"tiny",value:{name:"string",required:!0}},{key:"small",value:{name:"string",required:!0}},{key:"medium",value:{name:"string",required:!0}},{key:"large",value:{name:"string",required:!0}},{key:"big",value:{name:"string",required:!0}},{key:"huge",value:{name:"string",required:!0}},{key:"massive",value:{name:"string",required:!0}}]}},description:""},subheader:{required:!1,tsType:{name:"string"},description:""}}};const we={title:"Typography",component:R,tags:["autodocs"],argTypes:{text:{control:"text"},type:{control:"select",options:["heading","body","caption","button"]},size:{control:"select",options:["mini","tiny","small","medium","large","big","huge","massive"]},as:{control:"select",options:["h1","h2","h3","h4","h5","h6"],description:"Only relevant if type is heading",if:{arg:"type",eq:"heading"}}}},r=e=>D.jsx(R,{...e}),a=r.bind({});a.args={text:"Hello World",type:"heading"};const s=r.bind({});s.args={text:"Hello World",type:"body"};const i=r.bind({});i.args={text:"Hello World",type:"caption",textAlign:"center"};const n=r.bind({});n.args={text:"Hello World",type:"button"};const p=r.bind({});p.args={text:"Hello World",type:"heading",size:"small"};const t=r.bind({});t.args={text:"Hello World",type:"heading",size:"small",as:"h1",children:"Hello World"};const l=r.bind({});l.args={content:"Hello World",type:"heading",size:"small",as:"h1",subheader:"Subheader"};var m,u,h;a.parameters={...a.parameters,docs:{...(m=a.parameters)==null?void 0:m.docs,source:{originalSource:"(args: TypographyProps) => <Typography {...args} />",...(h=(u=a.parameters)==null?void 0:u.docs)==null?void 0:h.source}}};var x,b,f;s.parameters={...s.parameters,docs:{...(x=s.parameters)==null?void 0:x.docs,source:{originalSource:"(args: TypographyProps) => <Typography {...args} />",...(f=(b=s.parameters)==null?void 0:b.docs)==null?void 0:f.source}}};var T,S,$;i.parameters={...i.parameters,docs:{...(T=i.parameters)==null?void 0:T.docs,source:{originalSource:"(args: TypographyProps) => <Typography {...args} />",...($=(S=i.parameters)==null?void 0:S.docs)==null?void 0:$.source}}};var v,z,H;n.parameters={...n.parameters,docs:{...(v=n.parameters)==null?void 0:v.docs,source:{originalSource:"(args: TypographyProps) => <Typography {...args} />",...(H=(z=n.parameters)==null?void 0:z.docs)==null?void 0:H.source}}};var q,k,W;p.parameters={...p.parameters,docs:{...(q=p.parameters)==null?void 0:q.docs,source:{originalSource:"(args: TypographyProps) => <Typography {...args} />",...(W=(k=p.parameters)==null?void 0:k.docs)==null?void 0:W.source}}};var C,P,w,A,F;t.parameters={...t.parameters,docs:{...(C=t.parameters)==null?void 0:C.docs,source:{originalSource:"(args: TypographyProps) => <Typography {...args} />",...(w=(P=t.parameters)==null?void 0:P.docs)==null?void 0:w.source},description:{story:"HeaderProps story demonstrates the usage of the `as` prop, which is only relevant\nif the `type` is `heading`. The `as` prop allows specifying which HTML heading tag \nshould be used (e.g., h1, h2, etc.).\n\nThe `size` prop can be applied to all `Typography` types, allowing to adjust the \nfont size according to the provided size.",...(F=(A=t.parameters)==null?void 0:A.docs)==null?void 0:F.description}}};var _,j,B;l.parameters={...l.parameters,docs:{...(_=l.parameters)==null?void 0:_.docs,source:{originalSource:"(args: TypographyProps) => <Typography {...args} />",...(B=(j=l.parameters)==null?void 0:j.docs)==null?void 0:B.source}}};const Ae=["Default","Body","Caption","Button","Sizes","HeaderProps","HeaderWithSubHeader"];export{s as Body,n as Button,i as Caption,a as Default,t as HeaderProps,l as HeaderWithSubHeader,p as Sizes,Ae as __namedExportsOrder,we as default};
