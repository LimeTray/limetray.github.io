import{j as m}from"./jsx-runtime-8406ef1e.js";import{P as c}from"./Popup-def06411.js";const d={position:"top center",on:"hover",basic:!1,wide:!1,flowing:!1,inverted:!1},e=({content:t,trigger:a,header:n,position:o,on:l,onOpen:r,onClose:s,open:i,className:u="",...p})=>m.jsx(c,{className:`lt-popup ${u}`,content:t,trigger:a,header:n,position:o,on:l,onOpen:r,onClose:s,open:i,...p});e.defaultProps=d;const y=e;e.__docgenInfo={description:"",methods:[],displayName:"Tooltip",props:{content:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},trigger:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},header:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},position:{required:!1,tsType:{name:"union",raw:`| 'top left'
| 'top right'
| 'bottom right'
| 'bottom left'
| 'right center'
| 'left center'
| 'top center'
| 'bottom center'`,elements:[{name:"literal",value:"'top left'"},{name:"literal",value:"'top right'"},{name:"literal",value:"'bottom right'"},{name:"literal",value:"'bottom left'"},{name:"literal",value:"'right center'"},{name:"literal",value:"'left center'"},{name:"literal",value:"'top center'"},{name:"literal",value:"'bottom center'"}]},description:"",defaultValue:{value:"'top center'",computed:!1}},on:{required:!1,tsType:{name:"union",raw:"'hover' | 'click' | 'focus' | ('hover' | 'click' | 'focus')[]",elements:[{name:"literal",value:"'hover'"},{name:"literal",value:"'click'"},{name:"literal",value:"'focus'"},{name:"Array",elements:[{name:"unknown"}],raw:"('hover' | 'click' | 'focus')[]"}]},description:"",defaultValue:{value:"'hover'",computed:!1}},onOpen:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: React.MouseEvent<HTMLElement>, data: PopupProps) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLElement>",elements:[{name:"HTMLElement"}]},name:"event"},{type:{name:"PopupProps"},name:"data"}],return:{name:"void"}}},description:""},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: React.MouseEvent<HTMLElement>, data: PopupProps) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLElement>",elements:[{name:"HTMLElement"}]},name:"event"},{type:{name:"PopupProps"},name:"data"}],return:{name:"void"}}},description:""},open:{required:!1,tsType:{name:"boolean"},description:""},className:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"''",computed:!1}},basic:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},wide:{required:!1,tsType:{name:"union",raw:"boolean | 'very' | 'wide'",elements:[{name:"boolean"},{name:"literal",value:"'very'"},{name:"literal",value:"'wide'"}]},description:"",defaultValue:{value:"false",computed:!1}},flowing:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},inverted:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}}}};export{y as T};
