import{j as E}from"./jsx-runtime-8406ef1e.js";import{T as C}from"./index-a0004372.js";import"./index-ad58220e.js";import"./_commonjsHelpers-de833af9.js";import"./styled-components.browser.esm-d2d81691.js";import"./Header-30441d32.js";import"./extends-4c19d496.js";import"./getElementType-ff0d42f5.js";import"./childrenUtils-dd3b0ba5.js";import"./Icon-370c2d23.js";import"./inheritsLoose-5494d9cc.js";import"./factories-df82d7d3.js";import"./Label-d5345000.js";import"./ModernAutoControlledComponent-6bbe7d3d.js";import"./assertThisInitialized-081f9914.js";import"./htmlPropsUtils-2b22d933.js";import"./includes-192f9362.js";import"./Portal-8d2f321a.js";import"./index-4fee7e45.js";import"./Ref-51c42093.js";import"./objectWithoutPropertiesLoose-f3b3ace0.js";const er={title:"Typography",component:C,tags:["autodocs"],argTypes:{text:{control:"text"},type:{control:"select",options:["heading","body","caption","button"]},size:{control:"select",options:["mini","tiny","small","medium","large","big","huge","massive"]},as:{control:"select",options:["h1","h2","h3","h4","h5","h6"],description:"Only relevant if type is heading",if:{arg:"type",eq:"heading"}}}},r=D=>E.jsx(C,{...D}),o=r.bind({});o.args={text:"Hello World",type:"heading"};const s=r.bind({});s.args={text:"Hello World",type:"body"};const a=r.bind({});a.args={text:"Hello World",type:"caption",textAlign:"center"};const t=r.bind({});t.args={text:"Hello World",type:"button"};const p=r.bind({});p.args={text:"Hello World",type:"heading",size:"small"};const e=r.bind({});e.args={text:"Hello World",type:"heading",size:"small",as:"h1",children:"Hello World"};const i=r.bind({});i.args={content:"Hello World",type:"heading",size:"small",as:"h1",subheader:"Subheader"};var c,n,d;o.parameters={...o.parameters,docs:{...(c=o.parameters)==null?void 0:c.docs,source:{originalSource:"(args: TypographyProps) => <Typography {...args} />",...(d=(n=o.parameters)==null?void 0:n.docs)==null?void 0:d.source}}};var g,l,m;s.parameters={...s.parameters,docs:{...(g=s.parameters)==null?void 0:g.docs,source:{originalSource:"(args: TypographyProps) => <Typography {...args} />",...(m=(l=s.parameters)==null?void 0:l.docs)==null?void 0:m.source}}};var y,h,u;a.parameters={...a.parameters,docs:{...(y=a.parameters)==null?void 0:y.docs,source:{originalSource:"(args: TypographyProps) => <Typography {...args} />",...(u=(h=a.parameters)==null?void 0:h.docs)==null?void 0:u.source}}};var T,b,H;t.parameters={...t.parameters,docs:{...(T=t.parameters)==null?void 0:T.docs,source:{originalSource:"(args: TypographyProps) => <Typography {...args} />",...(H=(b=t.parameters)==null?void 0:b.docs)==null?void 0:H.source}}};var x,S,f;p.parameters={...p.parameters,docs:{...(x=p.parameters)==null?void 0:x.docs,source:{originalSource:"(args: TypographyProps) => <Typography {...args} />",...(f=(S=p.parameters)==null?void 0:S.docs)==null?void 0:f.source}}};var P,W,z,j,v;e.parameters={...e.parameters,docs:{...(P=e.parameters)==null?void 0:P.docs,source:{originalSource:"(args: TypographyProps) => <Typography {...args} />",...(z=(W=e.parameters)==null?void 0:W.docs)==null?void 0:z.source},description:{story:"HeaderProps story demonstrates the usage of the `as` prop, which is only relevant\nif the `type` is `heading`. The `as` prop allows specifying which HTML heading tag \nshould be used (e.g., h1, h2, etc.).\n\nThe `size` prop can be applied to all `Typography` types, allowing to adjust the \nfont size according to the provided size.",...(v=(j=e.parameters)==null?void 0:j.docs)==null?void 0:v.description}}};var w,B,_;i.parameters={...i.parameters,docs:{...(w=i.parameters)==null?void 0:w.docs,source:{originalSource:"(args: TypographyProps) => <Typography {...args} />",...(_=(B=i.parameters)==null?void 0:B.docs)==null?void 0:_.source}}};const or=["Default","Body","Caption","Button","Sizes","HeaderProps","HeaderWithSubHeader"];export{s as Body,t as Button,a as Caption,o as Default,e as HeaderProps,i as HeaderWithSubHeader,p as Sizes,or as __namedExportsOrder,er as default};
