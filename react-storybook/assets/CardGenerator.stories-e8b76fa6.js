import{j as e}from"./jsx-runtime-8406ef1e.js";import{R as y}from"./index-ad58220e.js";import{L as b}from"./ltCardV2-e5485308.js";import{F as r}from"./formRow-ec2c61e5.js";import{I as n}from"./Icon-c71aa201.js";import{a as o}from"./appConstants-a03b85fa.js";import"./_commonjsHelpers-de833af9.js";import"./Header-0dde6c88.js";import"./extends-4c19d496.js";import"./getElementType-605cc275.js";import"./childrenUtils-eea4be66.js";import"./Label-4ead698f.js";import"./inheritsLoose-5494d9cc.js";import"./ModernAutoControlledComponent-1c638d94.js";import"./assertThisInitialized-081f9914.js";import"./factories-5eda43f6.js";import"./htmlPropsUtils-54dd1e2d.js";import"./includes-d285d188.js";import"./Portal-1cdc15ec.js";import"./index-4fee7e45.js";import"./Ref-51c42093.js";import"./objectWithoutPropertiesLoose-f3b3ace0.js";import"./Card-f9701def.js";import"./map-81dc436d.js";import"./index-e20117c7.js";import"./index-d50b82e2.js";import"./Radio-29e2940c.js";import"./Checkbox-0781458d.js";import"./_baseSet-0be3a8f5.js";import"./requestIdGenerator-f6efc017.js";import"./ltButton-8a4ab908.js";import"./Button-4bb9fc92.js";import"./ltInput-a7e8929d.js";import"./Input-96c3508c.js";import"./ltToggle-dc660092.js";import"./TextArea-577bffd2.js";import"./ltCheckBox-0aad043f.js";import"./ltDropdown-0a2631a0.js";import"./Dropdown-599e0cca.js";import"./without-789b9cd5.js";import"./isEmpty-984c4ea6.js";import"./deburr-599ca0d8.js";import"./pick-28ba6add.js";import"./index-40c811d2.js";import"./_arrayReduce-865b0d3f.js";import"./searchComponent-4a6ba8a8.js";import"./Search-41509a44.js";import"./ltRadio-e071be06.js";const g=({cardHeader:a,cardSubheader:N,formRows:d,headerIcon:E,headerAction:O,className:C})=>e.jsx(b,{className:`card-generator ${C}`,header:a,subheader:N,headerIcon:E,headerAction:O,children:d.map((P,p)=>e.jsxs(y.Fragment,{children:[P,p<d.length-1&&e.jsx("div",{className:"lt-divider"})]},p))}),R=g;g.__docgenInfo={description:"",methods:[],displayName:"CardGenerator",props:{cardHeader:{required:!1,tsType:{name:"union",raw:"string | React.ReactNode",elements:[{name:"string"},{name:"ReactReactNode",raw:"React.ReactNode"}]},description:""},cardSubheader:{required:!1,tsType:{name:"union",raw:"string | React.ReactNode",elements:[{name:"string"},{name:"ReactReactNode",raw:"React.ReactNode"}]},description:""},formRows:{required:!0,tsType:{name:"Array",elements:[{name:"ReactReactNode",raw:"React.ReactNode"}],raw:"React.ReactNode[]"},description:""},headerIcon:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},headerAction:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},className:{required:!1,tsType:{name:"string"},description:""}}};const Ee={title:"CardGenerator",component:R},T=a=>e.jsx(R,{...a}),t=T.bind({});t.args={cardHeader:"Card Header",cardSubheader:"Card Subheader",headerIcon:e.jsx(n,{name:"filter",size:"small",color:"green"}),headerAction:e.jsx(n,{name:"filter",size:"small",color:"green"}),formRows:[e.jsx(r,{header:"Row 1 Header",subHeader:"Row 1 Subheader",components:[{type:o.COMPONENTS_TYPE.INPUT,isHidden:!1,props:{placeholder:"Input 1"}},{type:o.COMPONENTS_TYPE.BUTTON,props:{label:"Button 1",onClick:()=>console.log("onclick test"),transparent:!0}}]},"1"),e.jsx(r,{header:"Row 2 Header",subHeader:"Row 2 Subheader",components:[{type:o.COMPONENTS_TYPE.SELECTOR_GROUP,props:{options:[{type:"radio",options:[{key:"veg",value:"Veg"},{key:"nonveg",value:"Non-veg"}]}]}},{type:o.COMPONENTS_TYPE.TOGGLE,props:{label:"Toggle 1"}}]},"2"),e.jsx(r,{header:"Recommendation Logic",subHeader:"Products mapped under the categories will be shown as recommendations when user add products from those categories",components:[{type:o.COMPONENTS_TYPE.DROPDOWN,props:{placeholder:"Select number",options:[{key:"1",value:"1",text:"1"},{key:"2",value:"2",text:"2"},{key:"3",value:"3",text:"3"}],onChange:a=>console.log("onclick test",a.target.value),disabled:!1,multiple:!1}}]},"2"),e.jsx(r,{header:"Selector Grop",subHeader:"Products mapped under the categories will be shown as recommendations when user add products from those categories",components:[{type:o.COMPONENTS_TYPE.SELECTOR_GROUP,props:{options:[{type:"radio",options:[{key:"veg",value:"Veg"},{key:"nonveg",value:"Non-veg"}]},{type:"radio",options:[{key:"veg",value:"Veg"},{key:"nonveg",value:"Non-veg"}]}]}}]},"2"),e.jsx(r,{header:"Radio",subHeader:"Radio sample",components:[{type:o.COMPONENTS_TYPE.RADIO,props:{value:"Veg"}}]},"2"),e.jsx(r,{header:"Radio & Checkbox",subHeader:"Radio & Checkbox sample and callback in console",components:[{type:o.COMPONENTS_TYPE.RADIO,props:{label:"veg",value:"Veg",onChange:()=>console.log("clicked")}},{type:o.COMPONENTS_TYPE.CHECKBOX,props:{label:"veg",value:"Veg",onChange:()=>console.log("clicked")}}]},"2"),e.jsx(r,{header:"TextArea sample",subHeader:"",components:[{type:o.COMPONENTS_TYPE.TEXTAREA,props:{placeholder:"Tell us more",onChange:()=>console.log("clicked")}}]},"2"),e.jsx(r,{header:"Recommendation Logic",subHeader:"Products mapped under the categories will be shown as recommendations when user add products from those categories",components:[{type:o.COMPONENTS_TYPE.SEARCH,props:{placeholder:"Search...",onChange:a=>console.log("onclick test",a.target.value)}}]},"2"),e.jsx(r,{header:"Custom component test",subHeader:"Products mapped under the categories will be shown as recommendations when user add products from those categories",components:[{type:o.COMPONENTS_TYPE.CUSTOM,props:{component:e.jsxs("div",{children:["custom component ",e.jsx("i",{children:"test"})," "]})}}]},"2"),e.jsx("p",{children:"This is a random custom html test 1. Products mapped under the categories will be shown as recommendations when user add products from those categories"}),e.jsx("p",{children:"This is a random custom html test 1. Products mapped under the categories will be shown as recommendations when user add products from those categories"})]};const s=T.bind({});s.args={cardHeader:e.jsxs("div",{children:["Card Header with ",e.jsx("i",{children:"React Element"})]}),cardSubheader:e.jsxs("div",{children:["Card Subheader with ",e.jsx("i",{children:"React Element"})]}),headerIcon:e.jsx(n,{name:"filter",size:"small",color:"green"}),headerAction:e.jsx(n,{name:"filter",size:"small",color:"green"}),formRows:[e.jsx(r,{header:"Row 1 Header",subHeader:"Row 1 Subheader",components:[{type:o.COMPONENTS_TYPE.INPUT,isHidden:!1,props:{placeholder:"Input 1"}},{type:o.COMPONENTS_TYPE.BUTTON,props:{label:"Button 1",onClick:()=>console.log("onclick test"),transparent:!0}}]},"1"),e.jsx(r,{header:"Row 2 Header",subHeader:"Row 2 Subheader",components:[{type:o.COMPONENTS_TYPE.SELECTOR_GROUP,props:{options:[{type:"radio",options:[{key:"veg",value:"Veg"},{key:"nonveg",value:"Non-veg"}]}]}},{type:o.COMPONENTS_TYPE.TOGGLE,props:{label:"Toggle 1"}}]},"2")]};var i,c,m;t.parameters={...t.parameters,docs:{...(i=t.parameters)==null?void 0:i.docs,source:{originalSource:"(args: any) => <CardGenerator {...args} />",...(m=(c=t.parameters)==null?void 0:c.docs)==null?void 0:m.source}}};var l,u,h;s.parameters={...s.parameters,docs:{...(l=s.parameters)==null?void 0:l.docs,source:{originalSource:"(args: any) => <CardGenerator {...args} />",...(h=(u=s.parameters)==null?void 0:u.docs)==null?void 0:h.source}}};const Oe=["Default","HeaderWithReactElement"];export{t as Default,s as HeaderWithReactElement,Oe as __namedExportsOrder,Ee as default};
