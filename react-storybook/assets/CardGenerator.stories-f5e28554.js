import{j as e}from"./jsx-runtime-8406ef1e.js";import{R as y}from"./index-ad58220e.js";import{L as w}from"./ltCardV2-7463522d.js";import{F as r}from"./formRow-7e024b91.js";import{I as n}from"./Icon-a36dbc07.js";import{a as o}from"./appConstants-a03b85fa.js";import"./_commonjsHelpers-de833af9.js";import"./Header-933a70f4.js";import"./extends-4c19d496.js";import"./getElementType-486fb75c.js";import"./childrenUtils-8c0966fa.js";import"./Label-ce9f83fa.js";import"./inheritsLoose-5494d9cc.js";import"./ModernAutoControlledComponent-4ca57a24.js";import"./assertThisInitialized-081f9914.js";import"./factories-03e2068e.js";import"./htmlPropsUtils-cd6198e4.js";import"./includes-6af2fe54.js";import"./Portal-3e499843.js";import"./index-4fee7e45.js";import"./Ref-51c42093.js";import"./objectWithoutPropertiesLoose-f3b3ace0.js";import"./Card-030ca918.js";import"./map-0dadb82a.js";import"./index-db96575e.js";import"./index-d50b82e2.js";import"./ltRadio-10d42ce9.js";import"./Radio-1d646d99.js";import"./Checkbox-5fd25818.js";import"./_baseSet-4bb90091.js";import"./requestIdGenerator-f6efc017.js";import"./ltButton-f866bd72.js";import"./Button-b40a6544.js";import"./ltInput-93e30f1f.js";import"./Input-ffd68a60.js";import"./Dropdown-f34f6422.js";import"./without-0fb42e21.js";import"./isEmpty-8d8d3e94.js";import"./deburr-a74268bf.js";import"./pick-621ad31c.js";import"./index-8fff6de9.js";import"./_arrayReduce-865b0d3f.js";import"./styled-components.browser.esm-d2d81691.js";import"./index-5bbd7f5c.js";import"./ltToggle-8eda14ee.js";import"./TextArea-6ffee3ea.js";import"./ltCheckBox-78887452.js";import"./ltDropdown-83f8e9f8.js";import"./searchComponent-742cf2c5.js";import"./Search-15748c1a.js";const R=({cardHeader:t,cardSubheader:E,formRows:p,headerIcon:O,headerAction:C,className:b,hideBottomBorderForRows:i})=>e.jsx(w,{className:`card-generator ${b}`,header:t,subheader:E,headerIcon:O,headerAction:C,children:p.map((P,d)=>e.jsxs(y.Fragment,{children:[P,d<p.length-1&&!(i&&i[d])&&e.jsx("div",{className:"lt-divider"})]},d))}),T=R;R.__docgenInfo={description:"",methods:[],displayName:"CardGenerator",props:{cardHeader:{required:!1,tsType:{name:"union",raw:"string | React.ReactNode",elements:[{name:"string"},{name:"ReactReactNode",raw:"React.ReactNode"}]},description:""},cardSubheader:{required:!1,tsType:{name:"union",raw:"string | React.ReactNode",elements:[{name:"string"},{name:"ReactReactNode",raw:"React.ReactNode"}]},description:""},formRows:{required:!0,tsType:{name:"Array",elements:[{name:"ReactReactNode",raw:"React.ReactNode"}],raw:"React.ReactNode[]"},description:""},headerIcon:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},headerAction:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},className:{required:!1,tsType:{name:"string"},description:""},hideBottomBorderForRows:{required:!1,tsType:{name:"Record",elements:[{name:"number"},{name:"boolean"}],raw:"Record<number, boolean>"},description:""}}};const be={title:"CardGenerator",component:T},N=t=>e.jsx(T,{...t}),a=N.bind({});a.args={cardHeader:"Card Header",cardSubheader:"Card Subheader",headerIcon:e.jsx(n,{name:"filter",size:"small",color:"green"}),headerAction:e.jsx(n,{name:"filter",size:"small",color:"green"}),hideBottomBorderForRows:{1:!0,2:!0,3:!0},formRows:[e.jsx(r,{header:"Row 1 Header",subHeader:"Row 1 Subheader",components:[{type:o.COMPONENTS_TYPE.INPUT,isHidden:!1,props:{placeholder:"Input 1"}},{type:o.COMPONENTS_TYPE.BUTTON,props:{label:"Button 1",onClick:()=>console.log("onclick test"),transparent:!0}}]},"1"),e.jsx(r,{header:"Row 2 Header",subHeader:"Row 2 Subheader",components:[{type:o.COMPONENTS_TYPE.SELECTOR_GROUP,props:{options:[{type:"radio",options:[{key:"veg",value:"Veg"},{key:"nonveg",value:"Non-veg"}]}]}},{type:o.COMPONENTS_TYPE.TOGGLE,props:{label:"Toggle 1"}}]},"2"),e.jsx(r,{header:"Recommendation Logic",subHeader:"Products mapped under the categories will be shown as recommendations when user add products from those categories",components:[{type:o.COMPONENTS_TYPE.DROPDOWN,props:{placeholder:"Select number",options:[{key:"1",value:"1",text:"1"},{key:"2",value:"2",text:"2"},{key:"3",value:"3",text:"3"}],onChange:t=>console.log("onclick test",t.target.value),disabled:!1,multiple:!1}}]},"2"),e.jsx(r,{header:"Selector Grop",subHeader:"Products mapped under the categories will be shown as recommendations when user add products from those categories",components:[{type:o.COMPONENTS_TYPE.SELECTOR_GROUP,props:{options:[{type:"radio",options:[{key:"veg",value:"Veg"},{key:"nonveg",value:"Non-veg"}]},{type:"radio",options:[{key:"veg",value:"Veg"},{key:"nonveg",value:"Non-veg"}]}]}}]},"2"),e.jsx(r,{header:"Radio",subHeader:"Radio sample",components:[{type:o.COMPONENTS_TYPE.RADIO,props:{value:"Veg"}}]},"2"),e.jsx(r,{header:"Radio & Checkbox",subHeader:"Radio & Checkbox sample and callback in console",components:[{type:o.COMPONENTS_TYPE.RADIO,props:{label:"veg",value:"Veg",onChange:()=>console.log("clicked")}},{type:o.COMPONENTS_TYPE.CHECKBOX,props:{label:"veg",value:"Veg",onChange:()=>console.log("clicked")}}]},"2"),e.jsx(r,{header:"TextArea sample",subHeader:"",components:[{type:o.COMPONENTS_TYPE.TEXTAREA,props:{placeholder:"Tell us more",onChange:()=>console.log("clicked")}}]},"2"),e.jsx(r,{header:"Recommendation Logic",subHeader:"Products mapped under the categories will be shown as recommendations when user add products from those categories",components:[{type:o.COMPONENTS_TYPE.SEARCH,props:{placeholder:"Search...",onChange:t=>console.log("onclick test",t.target.value)}}]},"2"),e.jsx(r,{header:"Custom component test",subHeader:"Products mapped under the categories will be shown as recommendations when user add products from those categories",components:[{type:o.COMPONENTS_TYPE.CUSTOM,props:{component:e.jsxs("div",{children:["custom component ",e.jsx("i",{children:"test"})," "]})}}]},"2"),e.jsx("p",{children:"This is a random custom html test 1. Products mapped under the categories will be shown as recommendations when user add products from those categories"}),e.jsx("p",{children:"This is a random custom html test 1. Products mapped under the categories will be shown as recommendations when user add products from those categories"})]};const s=N.bind({});s.args={cardHeader:e.jsxs("div",{children:["Card Header with ",e.jsx("i",{children:"React Element"})]}),cardSubheader:e.jsxs("div",{children:["Card Subheader with ",e.jsx("i",{children:"React Element"})]}),headerIcon:e.jsx(n,{name:"filter",size:"small",color:"green"}),headerAction:e.jsx(n,{name:"filter",size:"small",color:"green"}),formRows:[e.jsx(r,{header:"Row 1 Header",subHeader:"Row 1 Subheader",components:[{type:o.COMPONENTS_TYPE.INPUT,isHidden:!1,props:{placeholder:"Input 1"}},{type:o.COMPONENTS_TYPE.BUTTON,props:{label:"Button 1",onClick:()=>console.log("onclick test"),transparent:!0}}]},"1"),e.jsx(r,{header:"Row 2 Header",subHeader:"Row 2 Subheader",components:[{type:o.COMPONENTS_TYPE.SELECTOR_GROUP,props:{options:[{type:"radio",options:[{key:"veg",value:"Veg"},{key:"nonveg",value:"Non-veg"}]}]}},{type:o.COMPONENTS_TYPE.TOGGLE,props:{label:"Toggle 1"}}]},"2")]};var c,m,l;a.parameters={...a.parameters,docs:{...(c=a.parameters)==null?void 0:c.docs,source:{originalSource:"(args: any) => <CardGenerator {...args} />",...(l=(m=a.parameters)==null?void 0:m.docs)==null?void 0:l.source}}};var u,h,g;s.parameters={...s.parameters,docs:{...(u=s.parameters)==null?void 0:u.docs,source:{originalSource:"(args: any) => <CardGenerator {...args} />",...(g=(h=s.parameters)==null?void 0:h.docs)==null?void 0:g.source}}};const Pe=["Default","HeaderWithReactElement"];export{a as Default,s as HeaderWithReactElement,Pe as __namedExportsOrder,be as default};
