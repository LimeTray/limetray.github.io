import{j as r}from"./jsx-runtime-ffb262ed.js";import{r as b}from"./index-76fb7be0.js";import{I as k}from"./Input-2c70c87c.js";import{I as B}from"./Icon-8c7b360e.js";import"./_commonjsHelpers-de833af9.js";import"./extends-98964cd2.js";import"./inheritsLoose-c82a83d4.js";import"./includes-b3798d5a.js";import"./assertThisInitialized-081f9914.js";import"./factories-75e2f8cc.js";import"./getElementType-06192456.js";import"./map-372c3dbe.js";import"./childrenUtils-f807df98.js";import"./htmlPropsUtils-cce87410.js";import"./Button-3de4f15d.js";import"./Label-3a60549d.js";import"./Portal-73562830.js";import"./index-d3ea75b5.js";import"./Ref-0f7da313.js";import"./objectWithoutPropertiesLoose-4f48578a.js";const n=({placeholder:t,buttonText:s,onButtonClick:a,icon:I,iconPosition:f,defaultValue:h,className:x="",...T})=>{const[i,y]=b.useState(h||""),v=C=>{y(C.target.value)},q=()=>{a&&a(i)};return r.jsx(k,{className:`lt-input ${x}`,placeholder:t,icon:I,iconPosition:f,value:i,onChange:v,action:s?{content:s,onClick:q,className:"button-text"}:void 0,...T})};n.__docgenInfo={description:"",methods:[],displayName:"LtInput",props:{placeholder:{required:!0,tsType:{name:"string"},description:""},buttonText:{required:!1,tsType:{name:"string"},description:""},onButtonClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:""},icon:{required:!1,tsType:{name:"ReactReactElement",raw:"React.ReactElement"},description:""},iconPosition:{required:!1,tsType:{name:"literal",value:"'left'"},description:""},defaultValue:{required:!1,tsType:{name:"string"},description:""},className:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"''",computed:!1}}}};const K={component:n,title:"LtInput",tags:["autodocs"],argTypes:{placeholder:{control:"text"},buttonText:{control:"text"},onButtonClick:{action:"clicked"},icon:{control:"text"},iconPosition:{control:"select",options:["left","right"]}}},g=t=>r.jsx(n,{...t}),e=g.bind({});e.args={placeholder:"Trending",buttonText:"save",onButtonClick:t=>console.log("Input Value:",t)};const o=g.bind({});o.args={placeholder:"Trending",buttonText:"",onButtonClick:t=>console.log("Input Value:",t),icon:r.jsx(B,{name:"search",color:"green"}),iconPosition:"right"};var p,c,u;e.parameters={...e.parameters,docs:{...(p=e.parameters)==null?void 0:p.docs,source:{originalSource:"args => <LtInput {...args} />",...(u=(c=e.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var l,m,d;o.parameters={...o.parameters,docs:{...(l=o.parameters)==null?void 0:l.docs,source:{originalSource:"args => <LtInput {...args} />",...(d=(m=o.parameters)==null?void 0:m.docs)==null?void 0:d.source}}};const M=["InputWithButton","InputWithIcon"];export{e as InputWithButton,o as InputWithIcon,M as __namedExportsOrder,K as default};
