import{j as t}from"./jsx-runtime-8406ef1e.js";import{r as T}from"./index-ad58220e.js";/* empty css              */import{I as l}from"./Icon-c71aa201.js";import"./_commonjsHelpers-de833af9.js";import"./extends-4c19d496.js";import"./inheritsLoose-5494d9cc.js";import"./factories-5eda43f6.js";import"./getElementType-605cc275.js";import"./childrenUtils-eea4be66.js";const s=a=>{const{maxCount:g,minCount:y,onChange:b,defaultCount:N,style:x,className:h,buttonClassName:r,subtractIcon:I,addIcon:v,counterClassName:R}=a,[e,q]=T.useState(N),u=c=>{q(c),b(c)};return t.jsxs("div",{className:`flex ${h}`,style:x,children:[t.jsx("button",{name:"subtract",type:"button",className:`counter-button ${r}`,onClick:()=>u(e>y?e-1:e),children:I}),t.jsx("div",{"data-name":"counter-count",className:`counter-count ${R}`,children:e}),t.jsx("button",{name:"add",type:"button",className:`counter-button ${r}`,onClick:()=>u(e<g?e+1:e),children:v})]})},V=s;s.defaultProps={maxCount:1e16,minCount:1,onChange:a=>console.log(a),defaultCount:1,style:{},className:"",buttonClassName:"",subtractIcon:"−",addIcon:"+",counterClassName:""};s.__docgenInfo={description:"",methods:[],displayName:"Counter",props:{maxCount:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"9999999999999999",computed:!1}},minCount:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"1",computed:!1}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(...args: any[]) => any",signature:{arguments:[{type:{name:"Array",elements:[{name:"any"}],raw:"any[]"},name:"args",rest:!0}],return:{name:"any"}}},description:"",defaultValue:{value:"(count: number) => console.log(count)",computed:!1}},defaultCount:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"1",computed:!1}},style:{required:!1,tsType:{name:"ReactCSSProperties",raw:"React.CSSProperties"},description:"",defaultValue:{value:"{}",computed:!1}},className:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}},buttonClassName:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}},subtractIcon:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"",defaultValue:{value:'"−"',computed:!1}},addIcon:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"",defaultValue:{value:'"+"',computed:!1}},counterClassName:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}}}};const A={component:V,title:"Counter",tags:["autodocs"]},o={args:{}},n={args:{maxCount:10,minCount:0,defaultCount:5,className:"custom-class",buttonClassName:"custom-button-class",subtractIcon:t.jsx(l,{name:"minus",color:"grey"}),addIcon:t.jsx(l,{name:"plus",color:"grey"}),onChange:a=>console.log(`Counter changed to: ${a}`),counterClassName:"modified-counter"}};var m,d,i;o.parameters={...o.parameters,docs:{...(m=o.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {}
}`,...(i=(d=o.parameters)==null?void 0:d.docs)==null?void 0:i.source}}};var p,f,C;n.parameters={...n.parameters,docs:{...(p=n.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    maxCount: 10,
    minCount: 0,
    defaultCount: 5,
    className: "custom-class",
    buttonClassName: "custom-button-class",
    subtractIcon: <Icon name="minus" color="grey" />,
    addIcon: <Icon name="plus" color="grey" />,
    onChange: (count: number) => console.log(\`Counter changed to: \${count}\`),
    counterClassName: "modified-counter"
  }
}`,...(C=(f=n.parameters)==null?void 0:f.docs)==null?void 0:C.source}}};const O=["Default","WithCustomProps"];export{o as Default,n as WithCustomProps,O as __namedExportsOrder,A as default};
