import{j as o}from"./jsx-runtime-8406ef1e.js";import{r as c}from"./index-ad58220e.js";import{C as a}from"./index-b5f4272b.js";import{B as m}from"./Button-21321eef.js";import"./_commonjsHelpers-de833af9.js";import"./Popup-7902b892.js";import"./extends-4c19d496.js";import"./inheritsLoose-5494d9cc.js";import"./factories-df82d7d3.js";import"./getElementType-ff0d42f5.js";import"./ModernAutoControlledComponent-6bbe7d3d.js";import"./assertThisInitialized-081f9914.js";import"./pick-729eb0ec.js";import"./_baseSet-d58de3a8.js";import"./childrenUtils-dd3b0ba5.js";import"./includes-192f9362.js";import"./index-f77928b3.js";import"./_arrayReduce-865b0d3f.js";import"./Portal-8d2f321a.js";import"./index-4fee7e45.js";import"./Ref-51c42093.js";import"./objectWithoutPropertiesLoose-f3b3ace0.js";import"./toPropertyKey-4015efc6.js";import"./styled-components.browser.esm-d2d81691.js";import"./config-15336477.js";import"./ltRadio-7f0a2b36.js";import"./Radio-e712d17b.js";import"./Checkbox-cb5dd6fb.js";import"./htmlPropsUtils-2b22d933.js";import"./index-6dcb29cb.js";import"./Icon-370c2d23.js";import"./index-7d7a0a6e.js";import"./searchComponent-bcb17182.js";import"./Input-3f8aa787.js";import"./map-20538cdf.js";import"./Label-d5345000.js";import"./Search-36bb2c3d.js";import"./isEmpty-b690c58c.js";import"./ltCheckBox-fb658f45.js";import"./index-9561a1c8.js";import"./Header-30441d32.js";import"./stringConstants-4e8cb88a.js";import"./lodash-9978a6f3.js";const le={title:"ChartOption",component:a,argTypes:{title:{control:"text",defaultValue:"Filter Options"}},parameters:{docs:{description:{component:`
The \`ChartOptionsMenu\` component is a reusable menu for filtering or selecting options in a chart or dashboard interface.

### Features:
- Supports both single and multi-selection.
- Allows grouping of sections for better organization.
- Handles options through dropdowns or radio buttons.
- Fully customizable through props.

### Usage:
Use this component to provide filter options or configurations in your charting or dashboard applications.
        `}}}},u=[{label:"Group By:",name:"groupBy",options:[{value:"channels",label:"Channels"},{value:"service",label:"Service"}],defaultValue:"channels"},{label:"Show:",name:"show",options:[{value:"orders",label:"Orders"},{value:"revenue",label:"Revenue"}],defaultValue:"orders"},{label:"Filter:",sections:[{isMultiSelection:!1,label:"service:",name:"filters",options:[{value:"channel1",label:"Channel 1"},{value:"channel2",label:"Channel 2"},{value:"service1",label:"Service 1"}],value:"channel1",placeholder:"Select filters"},{isMultiSelection:!0,label:"channel:",name:"filters",options:[{value:"channel1",label:"Channel 1"},{value:"channel2",label:"Channel 2"},{value:"service1",label:"Service 1"}],value:"channel1",placeholder:"Select filters"},{isMultiSelection:!0,label:"meal group:",name:"filters",options:[{value:"channel1",label:"Channel 1"},{value:"channel2",label:"Channel 2"},{value:"service1",label:"Service 1"}],value:"channel1",placeholder:"Select filters"}]}],h=t=>{const[d,s]=c.useState({}),p=r=>{console.log("Selected Filters:",r),s(r)};return o.jsx(a,{...t,sections:t.sections,onApply:p,trigerElement:o.jsx(m,{primary:!0,children:"Open Filter Menu"}),title:"Chart Options"})},e=h.bind({});e.args={sections:u};var l,i,n;e.parameters={...e.parameters,docs:{...(l=e.parameters)==null?void 0:l.docs,source:{originalSource:`(args: any) => {
  const [selectedFilters, setSelectedFilters] = useState({});
  const handleApply = (filters: any) => {
    console.log('Selected Filters:', filters);
    setSelectedFilters(filters);
  };
  return <ChartOption {...args} sections={args.sections} onApply={handleApply} trigerElement={<Button primary>Open Filter Menu</Button>} title='Chart Options' />;
}`,...(n=(i=e.parameters)==null?void 0:i.docs)==null?void 0:n.source}}};const ie=["Default"];export{e as Default,ie as __namedExportsOrder,le as default};
